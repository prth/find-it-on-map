<%= render 'layouts/filterBarSearch' %>

<div class="pull-left" id="searchResultList">
	<% if !@doctors.nil? && @doctors.any? %>
	<% @doctors.each do |doctor| %>
  <%
    if !@defaultLocale && doctor.doctor_translations.present?
      @translatedInfo = doctor.doctor_translations.where(system_language_id: @languageId).first
      if !@translatedInfo.nil?
        doctor.name = @translatedInfo.name
        doctor.address = @translatedInfo.address
      end
    end
  %>
	<a href="<%= @localeParam+profile_path %>?id=<%= doctor.id %>" target="_blank" class="pull-left eachSearch" id="doctor<%= doctor.id %>">
    <div class="pull-left eachImage">
      <%= image_tag('userdefault.png')%>
    </div>
    <div class="pull-left eachDetails">
		  <h4><%= doctor.name %>, MD</h4>
      <div class="speciality">Dentist</div>
		  <div class="details"><%= doctor.address %></div>
    </div>
	</a>
	<% end %>
	<% end %>
</div>
<div class="pull-right" id="searchResultMap">

</div>

<% if !@doctors.nil? && @doctors.any? %>
	<script type="text/javascript">
      var iCircle;
      var map;
      var json = JSON.parse('<%=raw @doctorJson %>');
      var gmarkers = [];

      function initialize() {
        var mapDiv = document.getElementById('searchResultMap');
        map = new google.maps.Map(mapDiv, {
          center: new google.maps.LatLng(<%= @locationSearch.latitude %>, <%= @locationSearch.longitude %>),
          zoom: 16,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        iCircle = new InvertedCircle({
          center: map.getCenter(),
          map: map,
          radius: 600, // 5 km
          editable: true,
          stroke_weight: 1,
          stroke_color: '#2da8f5',
          always_fit_to_map: false,
          center_drag: '<%= image_url("center.png") %>',
          resize_updown: '<%= image_url("resize_updown.png") %>',
          resize_leftright: '<%= image_url("resize_leftright.png") %>'
        });

        var bounds = iCircle.getBounds();
        //alert(bounds);
		
        
		  if(json != null) {
          	
            var redCircle ={
              path: google.maps.SymbolPath.CIRCLE,
              fillColor: 'red',
              fillOpacity: .9,
              scale: 4.5,
              strokeColor: 'white',
              strokeWeight: 1
            };
            for (var i = 0, length = json.length; i < length; i++) {
              var data = json[i],
              latLng = new google.maps.LatLng(data.lat, data.lng); 

              if(google.maps.geometry.spherical.computeDistanceBetween(iCircle.getCenter(), latLng) 
              		<= iCircle.getRadius()) {
                  // Creating a marker and putting it on the map
                  var marker = new google.maps.Marker({
                      position: latLng,
                      map: map,
                      title: data.name
                  });
                  gmarkers.push(marker);
                  dataHtml = "<a href='<%= @localeParam+profile_path %>?id="+data.id+"' target='_blank' class='previewDiv'>"+document.getElementById("doctor"+data.id).innerHTML+"</a>";
                  alert(dataHtml);
                  infoBox(map, marker, dataHtml);
			  }else {
                  var marker = new google.maps.Marker({
                      position: latLng,
                      map: map,
                      title: data.name,
                      icon: redCircle
                  });
                  gmarkers.push(marker);
                 // infoBox(map, marker, data);
              }
            }
          }
        
        
      }
      // Load the map
      google.maps.event.addDomListener(window, 'load', initialize);
      var infoWindow = new google.maps.InfoWindow();
      function infoBox(map, marker, dataHtml) {

        //infoWindow = new google.maps.InfoWindow();
        // Attaching a click event to the current marker
        google.maps.event.addListener(marker, "click", function(e) {
            if(infoWindow.getMap() != null) {
              infoWindow.close();
            }
            infoWindow.setContent(dataHtml);
            infoWindow.open(map, marker);
        });

        
      }

      function removeMarkers(){
    		for(i=0; i<gmarkers.length; i++){
        		gmarkers[i].setMap(null);
    		}
  		}

      function changeSearchResults() {
      	removeMarkers();
        //alert("hey");
        var redCircle ={
            path: google.maps.SymbolPath.CIRCLE,
            fillColor: 'red',
            fillOpacity: .9,
            scale: 4.5,
            strokeColor: 'white',
            strokeWeight: 1
        };
        var bounds = iCircle.getBounds();
        console.log(bounds);
        console.log(iCircle.getRadius());
        console.log(iCircle.getCenter());
        if (json != null) {
        for (var i = 0, length = json.length; i < length; i++) {
              var data = json[i],
              latLng = new google.maps.LatLng(data.lat, data.lng); 
              console.log(google.maps.geometry.spherical.computeDistanceBetween(iCircle.getCenter(), latLng));
              console.log(latLng);
              if(google.maps.geometry.spherical.computeDistanceBetween(iCircle.getCenter(), latLng) 
              		<= iCircle.getRadius()) {

              		console.log("contains");
                  // Creating a marker and putting it on the map
                  var marker = new google.maps.Marker({
                      position: latLng,
                      map: map,
                      title: data.name
                  });
                  gmarkers.push(marker);
                  dataHtml = "<a href='<%= @localeParam+profile_path %>?id="+data.id+"' target='_blank' class='previewDiv'>"+document.getElementById("doctor"+data.id).innerHTML+"</a>";
                  infoBox(map, marker, dataHtml);
              }else {
                  var marker = new google.maps.Marker({
                      position: latLng,
                      map: map,
                      title: data.name,
                      icon: redCircle
                  });
                  gmarkers.push(marker);
                 // infoBox(map, marker, data);
              }
            }
          }
       /* var marker = new google.maps.Marker({
            position: new google.maps.LatLng(19.075995, 73.000920),
            map: map,
            title: 'Hello World!',
            icon: redCircle
        });

        var contentString = $('<div class="marker-info-win">'+
        '<div class="marker-inner-win"><span class="info-content">'+
        '<span class="marker-heading">New Marker</span>'+
        'This is a new marker infoWindow'+ 
        '</span>'+
        '</div></div>');


        var infowindow = new google.maps.InfoWindow();

        infowindow.setContent(contentString[0]);
        

        google.maps.event.addListener(marker, 'mouseover', function() {
            if(infowindow.getMap()) {

            }else {
              infowindow.open(map,marker); // click on marker opens info window 
              
            }
        });

        google.maps.event.addListener(marker, 'mouseout', function() {
            //infowindow.close(map,marker); // click on marker opens info window 
        });*/
      }
    </script>

<% end %>
